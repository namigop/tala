<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls" xmlns:Custom="http://metro.mahapps.com/winfx/xaml/shared">

    <BitmapImage UriSource="rest.ico" x:Key="mainIco"  />

    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource ComboBoxMouseOverInnerBorderBrush}"/>
        <Setter Property="controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MetroComboBoxItem}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="comboToggleStyle" TargetType="{x:Type ToggleButton}">
                                <Setter Property="Padding" Value="3"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Grid>
                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Grid Margin="1">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}"/>
                                                        <ColumnDefinition Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Button x:Name="PART_ClearText" Content="r" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="Marlett" IsTabStop="False" controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Style="{DynamicResource ChromelessButtonStyle}">
                                                        <Button.Visibility>
                                                            <Binding Path="(controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}">
                                                                <Binding.Converter>
                                                                    <BooleanToVisibilityConverter/>
                                                                </Binding.Converter>
                                                            </Binding>
                                                        </Button.Visibility>
                                                    </Button>
                                                    <Rectangle x:Name="BtnArrowBackground" Grid.Column="2" Fill="Transparent" StrokeThickness="0"/>
                                                    <Path x:Name="BtnArrow" Grid.Column="2" Data="F1M301.14,-189.041L311.57,-189.041 306.355,-182.942 301.14,-189.041z" Fill="{DynamicResource GrayBrush1}" HorizontalAlignment="Center" Height="4" IsHitTestVisible="False" Stretch="Uniform" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="8"/>
                                                </Grid>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" SourceName="BtnArrowBackground" Value="True">
                                                    <Setter Property="Fill" TargetName="BtnArrowBackground" Value="{DynamicResource GrayBrush5}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Button Padding="5,2,5,2" Style="{DynamicResource SquareButtonStyle}" Command="{Binding SendCommand}" Grid.Column="0" BorderThickness="0" >
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Resources>
                                        <SolidColorBrush Color="Green" x:Key="FillColor" />
                                    </StackPanel.Resources>

                                    <ContentControl Content="{DynamicResource icon_play}" Width="24" Height="24" Padding="0" />
                                </StackPanel>
                            </Button>
                            <!--<Border BorderThickness="0" Grid.Column="0" Background="{TemplateBinding Background}">
                                <Border.Resources>
                                    <SolidColorBrush Color="SkyBlue" x:Key="FillColor" />
                                </Border.Resources>
                                <ContentControl Content="{DynamicResource icon_globe}" Width="24" Height="24" />                               
                            </Border>-->

                            <Grid Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}"/>
                                    <ColumnDefinition Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Grid}}}"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="PART_DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="3" Foreground="{TemplateBinding Foreground}" IsTabStop="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" Style="{DynamicResource comboToggleStyle}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                                <Border x:Name="EditableTextBoxBorder" BorderBrush="Transparent" BorderThickness="1,1,0,1" Background="{TemplateBinding Background}" Margin="0,0,-2,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed">
                                    <TextBox x:Name="PART_EditableTextBox" BorderThickness="0" Background="{x:Null}" Foreground="{TemplateBinding Foreground}" Focusable="True" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="0,0,0,-2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" controls:TextBoxHelper.Watermark="{TemplateBinding controls:TextBoxHelper.Watermark}">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="MinHeight" Value="26"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                            <ControlTemplate.Resources>
                                                                <Storyboard x:Key="enterGotFocus">
                                                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                </Storyboard>
                                                                <Storyboard x:Key="exitGotFocus">
                                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                </Storyboard>
                                                                <Storyboard x:Key="enterHasText">
                                                                    <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                </Storyboard>
                                                                <Storyboard x:Key="exitHasText">
                                                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                </Storyboard>
                                                            </ControlTemplate.Resources>
                                                            <Grid>
                                                                <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                <Grid x:Name="PART_InnerGrid" Margin="2">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*"/>
                                                                        <ColumnDefinition x:Name="ButtonColumn" Width="{Binding (controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto"/>
                                                                        <RowDefinition x:Name="ButtonRow" Height="*"/>
                                                                    </Grid.RowDefinitions>
                                                                    <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                                                    <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                                                    <TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                    <Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
                                                                        <TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                            <TextBlock.RenderTransform>
                                                                                <TranslateTransform/>
                                                                            </TextBlock.RenderTransform>
                                                                        </TextBlock>
                                                                    </Grid>
                                                                    <Button x:Name="PART_ClearText" Content="{Binding (controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
                                                                        <Button.Visibility>
                                                                            <Binding Mode="OneWay" Path="(controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                                <Binding.Converter>
                                                                                    <BooleanToVisibilityConverter/>
                                                                                </Binding.Converter>
                                                                            </Binding>
                                                                        </Button.Visibility>
                                                                    </Button>
                                                                </Grid>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                                                    <Setter Property="Visibility" TargetName="Message" Value="Visible"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding (controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
                                                                    <DataTrigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.EnterActions>
                                                                    <DataTrigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.ExitActions>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding (controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                                                                    <DataTrigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.EnterActions>
                                                                    <DataTrigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.ExitActions>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding (controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
                                                                    <DataTrigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.EnterActions>
                                                                    <DataTrigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                    <DoubleAnimation.EasingFunction>
                                                                                        <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                    </DoubleAnimation.EasingFunction>
                                                                                </DoubleAnimation>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </DataTrigger.ExitActions>
                                                                </DataTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="TextWrapping" Value="NoWrap"/>
                                                                        <Condition Property="AcceptsReturn" Value="False"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
                                                                </MultiTrigger>
                                                                <DataTrigger Binding="{Binding (controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                                                                    <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                                                    <Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
                                                                </DataTrigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsReadOnly" Value="True">
                                                                    <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                                                                </Trigger>
                                                                <Trigger Property="IsFocused" Value="True">
                                                                    <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                    <Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                                                    <Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="controls:TextBoxHelper.HasText" Value="False"/>
                                                                        <Condition Property="IsFocused" Value="True"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <MultiTrigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </MultiTrigger.EnterActions>
                                                                    <MultiTrigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </MultiTrigger.ExitActions>
                                                                </MultiTrigger>
                                                                <Trigger Property="controls:TextBoxHelper.HasText" Value="True">
                                                                    <Trigger.EnterActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.EnterActions>
                                                                    <Trigger.ExitActions>
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </Trigger.ExitActions>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.BasedOn>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
                                                        <Setter Property="controls:TextBoxHelper.IsMonitoring" Value="True"/>
                                                        <Setter Property="controls:ControlsHelper.ButtonWidth" Value="22"/>
                                                        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                                                        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="MinHeight" Value="26"/>
                                                        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                                                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                        <Setter Property="Padding" Value="0"/>
                                                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                                                        <Setter Property="controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                                                        <Setter Property="controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                                                        <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                                    <ControlTemplate.Resources>
                                                                        <Storyboard x:Key="enterGotFocus">
                                                                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                        </Storyboard>
                                                                        <Storyboard x:Key="exitGotFocus">
                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                        </Storyboard>
                                                                        <Storyboard x:Key="enterHasText">
                                                                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                        </Storyboard>
                                                                        <Storyboard x:Key="exitHasText">
                                                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                        </Storyboard>
                                                                    </ControlTemplate.Resources>
                                                                    <Grid>
                                                                        <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                        <Grid x:Name="PART_InnerGrid" Margin="2">
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition x:Name="ButtonColumn" Width="{Binding (controls:ControlsHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="Auto"/>
                                                                                <RowDefinition x:Name="ButtonRow" Height="*"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Border x:Name="ReadOnlyVisualElement" Background="{x:Null}" Grid.ColumnSpan="2" Opacity="0" Grid.Row="1"/>
                                                                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                                                            <TextBlock x:Name="Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="6,2" Opacity="0.6" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding controls:TextBoxHelper.Watermark}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                            <Grid x:Name="FloatingMessageContainer" Grid.ColumnSpan="2" Grid.Column="0" Height="0" IsHitTestVisible="False" Margin="5,0" Visibility="Visible">
                                                                                <TextBlock x:Name="FloatingMessage" Foreground="{TemplateBinding Foreground}" FontSize="{DynamicResource FloatingWatermarkFontSize}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0.6" Text="{TemplateBinding controls:TextBoxHelper.Watermark}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                                    <TextBlock.RenderTransform>
                                                                                        <TranslateTransform/>
                                                                                    </TextBlock.RenderTransform>
                                                                                </TextBlock>
                                                                            </Grid>
                                                                            <Button x:Name="PART_ClearText" Content="{Binding (controls:TextBoxHelper.ButtonContent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="16" FontFamily="{Binding (controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False" controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}">
                                                                                <Button.Visibility>
                                                                                    <Binding Mode="OneWay" Path="(controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                                                        <Binding.Converter>
                                                                                            <BooleanToVisibilityConverter/>
                                                                                        </Binding.Converter>
                                                                                    </Binding>
                                                                                </Button.Visibility>
                                                                            </Button>
                                                                        </Grid>
                                                                        <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                                                            <Setter Property="Visibility" TargetName="Message" Value="Visible"/>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding (controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="False">
                                                                            <DataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.EnterActions>
                                                                            <DataTrigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.ExitActions>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding (controls:TextBoxHelper.Watermark), RelativeSource={RelativeSource Self}}" Value="">
                                                                            <DataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.EnterActions>
                                                                            <DataTrigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.ExitActions>
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding (controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="False">
                                                                            <DataTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="20" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.EnterActions>
                                                                            <DataTrigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="15" Storyboard.TargetProperty="Height" Storyboard.TargetName="FloatingMessageContainer">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FloatingMessageContainer"/>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Storyboard.TargetName="FloatingMessage">
                                                                                            <DoubleAnimation.EasingFunction>
                                                                                                <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                                                            </DoubleAnimation.EasingFunction>
                                                                                        </DoubleAnimation>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </DataTrigger.ExitActions>
                                                                        </DataTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="TextWrapping" Value="NoWrap"/>
                                                                                <Condition Property="AcceptsReturn" Value="False"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Width" TargetName="ButtonColumn" Value="{Binding ActualHeight, ElementName=ButtonRow, Mode=OneWay}"/>
                                                                        </MultiTrigger>
                                                                        <DataTrigger Binding="{Binding (controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                                                                            <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                                                            <Setter Property="Grid.ColumnSpan" TargetName="Message" Value="2"/>
                                                                        </DataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsReadOnly" Value="True">
                                                                            <Setter Property="Opacity" TargetName="ReadOnlyVisualElement" Value="1"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsFocused" Value="True">
                                                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                            <Setter Property="Foreground" TargetName="FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                                                            <Setter Property="Opacity" TargetName="FloatingMessage" Value="1"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="controls:TextBoxHelper.HasText" Value="False"/>
                                                                                <Condition Property="IsFocused" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <MultiTrigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </MultiTrigger.EnterActions>
                                                                            <MultiTrigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </MultiTrigger.ExitActions>
                                                                        </MultiTrigger>
                                                                        <Trigger Property="controls:TextBoxHelper.HasText" Value="True">
                                                                            <Trigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.EnterActions>
                                                                            <Trigger.ExitActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Message"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.ExitActions>
                                                                        </Trigger>
                                                                        <Trigger Property="controls:TextBoxHelper.IsWaitingForData" Value="True">
                                                                            <Trigger.EnterActions>
                                                                                <BeginStoryboard>
                                                                                    <Storyboard>
                                                                                        <DoubleAnimation AutoReverse="True" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="Base"/>
                                                                                    </Storyboard>
                                                                                </BeginStoryboard>
                                                                            </Trigger.EnterActions>
                                                                            <Setter Property="Effect" TargetName="Base">
                                                                                <Setter.Value>
                                                                                    <DropShadowEffect BlurRadius="10" Color="{DynamicResource BlackColor}" Opacity="0" ShadowDepth="0"/>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                        <Trigger Property="controls:TextBoxHelper.IsWaitingForData" Value="False">
                                                                            <Setter Property="Effect" TargetName="Base" Value="{x:Null}"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Style.BasedOn>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                </Border>
                                <Grid x:Name="ContentSite" Margin="7,0,0,0">
                                    <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Border x:Name="FocusBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" Grid.ColumnSpan="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
                        <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0.6" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed"/>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Grid MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="PopupBorder" BorderBrush="{DynamicResource ComboBoxPopupBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource WhiteBrush}" Effect="{DynamicResource DropShadowBrush}" HorizontalAlignment="Stretch" Height="Auto"/>
                                <ScrollViewer x:Name="DropDownScrollViewer" BorderThickness="0" Margin="2" Padding="1">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding (controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="Grid.ColumnSpan" TargetName="EditableTextBoxBorder" Value="2"/>
                            <Setter Property="Grid.ColumnSpan" TargetName="ContentSite" Value="2"/>
                        </DataTrigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Visibility" TargetName="EditableTextBoxBorder" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                            <Setter Property="Focusable" TargetName="PART_DropDownToggle" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="FocusBorder" Value="Visible"/>
                            <Setter Property="BorderBrush" TargetName="FocusBorder" Value="{Binding (controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" SourceName="PART_EditableTextBox" Value="True">
                            <Setter Property="Visibility" TargetName="FocusBorder" Value="Visible"/>
                            <Setter Property="BorderBrush" TargetName="FocusBorder" Value="{Binding (controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="FocusBorder" Value="Visible"/>
                            <Setter Property="BorderBrush" TargetName="FocusBorder" Value="{Binding (controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="Visibility" TargetName="FocusBorder" Value="Visible"/>
                            <Setter Property="BorderBrush" TargetName="FocusBorder" Value="{Binding (controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="DisabledVisualElement" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ExpanderControlTemplate1" TargetType="{x:Type Expander}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.7"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpanderRoot">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0"/>
            <DockPanel x:Name="ExpanderRoot">
                <Border x:Name="HeaderSite" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" DockPanel.Dock="Top">
                    <DockPanel>
                        <ToggleButton x:Name="ToggleSite" BorderBrush="Transparent" Background="Transparent" DockPanel.Dock="Left" FocusVisualStyle="{x:Null}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                    <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="19"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Ellipse x:Name="Circle" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19">
                                                            <Ellipse.Stroke>Black
                                                                <!--<Binding Path="Background" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Expander}}">
                                                                    --><!--<Binding.Converter>
                                                                        <Custom:BackgroundToForegroundConverter>MahApps.Metro.Converters.BackgroundToForegroundConverter</Custom:BackgroundToForegroundConverter>
                                                                    </Binding.Converter>--><!--
                                                                </Binding>-->
                                                            </Ellipse.Stroke>
                                                        </Ellipse>
                                                        <Path x:Name="Arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" StrokeThickness="2" VerticalAlignment="Center">
                                                            <Path.Stroke>Black
                                                                <!--<Binding Path="Background" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Expander}}">
                                                                    --><!--<Binding.Converter>
                                                                        <Custom:BackgroundToForegroundConverter>MahApps.Metro.Converters.BackgroundToForegroundConverter</Custom:BackgroundToForegroundConverter>
                                                                    </Binding.Converter>--><!--
                                                                </Binding>-->
                                                            </Path.Stroke>
                                                        </Path>
                                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Data" TargetName="Arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Stroke" TargetName="Circle" Value="{DynamicResource GrayBrush2}"/>
                                                        <Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource GrayBrush2}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Stroke" TargetName="Circle" Value="{DynamicResource BlackColorBrush}"/>
                                                        <Setter Property="StrokeThickness" TargetName="Circle" Value="2"/>
                                                        <Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource BlackColorBrush}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" TextElement.FontWeight="{TemplateBinding controls:ControlsHelper.HeaderFontWeight}" TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}" TextElement.FontSize="{TemplateBinding controls:ControlsHelper.HeaderFontSize}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"/>
                        <Border BorderThickness="0" Background="{DynamicResource AccentColorBrush}" Height="1"/>
                    </DockPanel>
                </Border>
                <Border x:Name="ExpandSite" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Opacity="0" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                </Border>
            </DockPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.25" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpandSite"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.25" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpandSite"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                <Setter Property="BorderThickness" TargetName="ExpandSite" Value="0,1,1,1"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                <Setter Property="Style" TargetName="ToggleSite">
                    <Setter.Value>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="19"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid>
                                                    <Grid.LayoutTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="-90"/>
                                                        </TransformGroup>
                                                    </Grid.LayoutTransform>
                                                    <Ellipse x:Name="Circle" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19">
                                                        <Ellipse.Stroke>Black
                                                            <!--<Binding Path="Background" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Expander}}">
                                                                --><!--<Binding.Converter>
                                                                    <Custom:BackgroundToForegroundConverter>MahApps.Metro.Converters.BackgroundToForegroundConverter</Custom:BackgroundToForegroundConverter>
                                                                </Binding.Converter>--><!--
                                                            </Binding>-->
                                                        </Ellipse.Stroke>
                                                    </Ellipse>
                                                    <Path x:Name="Arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" StrokeThickness="2" VerticalAlignment="Center">
                                                        <Path.Stroke>Black
                                                            <!--<Binding Path="Background" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Expander}}">
                                                                --><!--<Binding.Converter>
                                                                    <Custom:BackgroundToForegroundConverter>MahApps.Metro.Converters.BackgroundToForegroundConverter</Custom:BackgroundToForegroundConverter>
                                                                </Binding.Converter>--><!--
                                                            </Binding>-->
                                                        </Path.Stroke>
                                                    </Path>
                                                </Grid>
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Data" TargetName="Arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="Circle" Value="{DynamicResource GrayBrush2}"/>
                                                <Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource GrayBrush2}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Stroke" TargetName="Circle" Value="{DynamicResource BlackColorBrush}"/>
                                                <Setter Property="StrokeThickness" TargetName="Circle" Value="2"/>
                                                <Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource BlackColorBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="DockPanel.Dock" TargetName="ToggleSite" Value="Top"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                <Setter Property="BorderThickness" TargetName="ExpandSite" Value="1,1,1,0"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                <Setter Property="Style" TargetName="ToggleSite">
                    <Setter.Value>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="19"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid>
                                                    <Grid.LayoutTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="180"/>
                                                        </TransformGroup>
                                                    </Grid.LayoutTransform>
                                                    <Ellipse x:Name="Circle" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19">
                                                        <Ellipse.Stroke>Black
                                                            <!--<Binding Path="Background" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Expander}}">
                                                                --><!--<Binding.Converter>
                                                                    <Custom:BackgroundToForegroundConverter>MahApps.Metro.Converters.BackgroundToForegroundConverter</Custom:BackgroundToForegroundConverter>
                                                                </Binding.Converter>--><!--
                                                            </Binding>-->
                                                        </Ellipse.Stroke>
                                                    </Ellipse>
                                                    <Path x:Name="Arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" StrokeThickness="2" VerticalAlignment="Center">
                                                        <Path.Stroke>Black
                                                            <!--<Binding Path="Background" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Expander}}">
                                                                --><!--<Binding.Converter>
                                                                    <Custom:BackgroundToForegroundConverter>MahApps.Metro.Converters.BackgroundToForegroundConverter</Custom:BackgroundToForegroundConverter>
                                                                </Binding.Converter>--><!--
                                                            </Binding>-->
                                                        </Path.Stroke>
                                                    </Path>
                                                </Grid>
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Data" TargetName="Arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="Circle" Value="{DynamicResource GrayBrush2}"/>
                                                <Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource GrayBrush2}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Stroke" TargetName="Circle" Value="{DynamicResource BlackColorBrush}"/>
                                                <Setter Property="StrokeThickness" TargetName="Circle" Value="2"/>
                                                <Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource BlackColorBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
                <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                <Setter Property="BorderThickness" TargetName="ExpandSite" Value="1,1,0,1"/>
                <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                <Setter Property="Style" TargetName="ToggleSite">
                    <Setter.Value>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="19"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Grid>
                                                    <Grid.LayoutTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="90"/>
                                                        </TransformGroup>
                                                    </Grid.LayoutTransform>
                                                    <Ellipse x:Name="Circle" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19">
                                                        <Ellipse.Stroke>Black
                                                            <!--<Binding Path="Background" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Expander}}">
                                                                --><!--<Binding.Converter>
                                                                    <Custom:BackgroundToForegroundConverter>MahApps.Metro.Converters.BackgroundToForegroundConverter</Custom:BackgroundToForegroundConverter>
                                                                </Binding.Converter>--><!--
                                                            </Binding>-->
                                                        </Ellipse.Stroke>
                                                    </Ellipse>
                                                    <Path x:Name="Arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" StrokeThickness="2" VerticalAlignment="Center">
                                                        <Path.Stroke>Black
                                                            <!--<Binding Path="Background" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Expander}}">
                                                                --><!--<Binding.Converter>
                                                                    <Custom:BackgroundToForegroundConverter>MahApps.Metro.Converters.BackgroundToForegroundConverter</Custom:BackgroundToForegroundConverter>
                                                                </Binding.Converter>--><!--
                                                            </Binding>-->
                                                        </Path.Stroke>
                                                    </Path>
                                                </Grid>
                                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Data" TargetName="Arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Stroke" TargetName="Circle" Value="{DynamicResource GrayBrush2}"/>
                                                <Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource GrayBrush2}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Stroke" TargetName="Circle" Value="{DynamicResource BlackColorBrush}"/>
                                                <Setter Property="StrokeThickness" TargetName="Circle" Value="2"/>
                                                <Setter Property="Stroke" TargetName="Arrow" Value="{DynamicResource BlackColorBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="DockPanel.Dock" TargetName="ToggleSite" Value="Top"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


</ResourceDictionary>